{"version":3,"sources":["images/papier.svg","images/nozyczki.svg","images/kamien.svg","components/Game.js","components/Result.js","components/Container.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Game","react_default","a","createElement","className","src","paper","alt","Component","Result","Container","scissors","rock","components_Game","components_Result","App","components_Container","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kQCqBzBC,mLAbb,OACCC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBC,IAAKC,IAAOC,IAAI,gCACnDN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,wBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBC,IAAKC,IAAOC,IAAI,gCACrDN,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAhB,SACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAlB,UACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBAAhB,oBATeI,aCOJC,mLATb,OACCR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,UACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,KACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAhB,aANiBI,aCyBNE,mLAjBb,OACCT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACjBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,sCACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcC,IAAKC,IAAOC,IAAI,cAC7CN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcC,IAAKM,IAAUJ,IAAI,iBAChDN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcC,IAAKO,IAAML,IAAI,eAG9CN,EAAAC,EAAAC,cAACU,EAAD,MACAZ,EAAAC,EAAAC,cAACW,EAAD,cAboBN,aCKTO,mLARb,OACCd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAACa,EAAD,cAJcR,aCSES,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtB,EAAAC,EAAAC,cAACqB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.1af3b219.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/papier.2edf05b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/nozyczki.53297d85.svg\";","module.exports = __webpack_public_path__ + \"static/media/kamien.2c8b1b89.svg\";","import React, { Component } from 'react';\r\n\r\nimport paper from '../images/papier.svg';\r\nimport scissors from '../images/nozyczki.svg';\r\nimport rock from '../images/kamien.svg';\r\n\r\nclass Game extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<main className=\"game\">\r\n\t\t\t\t<img className=\"game__player-hand\" src={paper} alt=\"paper, scissors or rock SVG\" />\r\n\t\t\t\t<div className=\"game__result\">Wygrał komputer</div>\r\n\t\t\t\t<img className=\"game__computer-hand\" src={paper} alt=\"paper, scissors or rock SVG\" />\r\n\t\t\t\t<span className=\"game__player-text\">Gracz</span>\r\n\t\t\t\t<button className=\"game__start\">Zagraj</button>\r\n\t\t\t\t<span className=\"game__computer-text\">Komputer</span>\r\n\t\t\t</main>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Game;\r\n","import React, { Component } from 'react';\r\n\r\nclass Result extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"result\">\r\n\t\t\t\t<h2 className=\"result__title\">Wynik:</h2>\r\n\t\t\t\t<span className=\"result__player\">0</span>\r\n\t\t\t\t<span className=\"result__computer\">0</span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Result;\r\n","import React, { Component } from 'react';\r\nimport Game from './Game';\r\nimport Result from './Result';\r\n\r\nimport paper from '../images/papier.svg';\r\nimport scissors from '../images/nozyczki.svg';\r\nimport rock from '../images/kamien.svg';\r\n\r\nclass Container extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<header className=\"header\">\r\n\t\t\t\t\t<h1 className=\"header__title\">papier, nożyczki, kamień</h1>\r\n\t\t\t\t\t<figure className=\"images\">\r\n\t\t\t\t\t\t<img className=\"images__img\" src={paper} alt=\"paper SVG\" />\r\n\t\t\t\t\t\t<img className=\"images__img\" src={scissors} alt=\"scissors SVG\" />\r\n\t\t\t\t\t\t<img className=\"images__img\" src={rock} alt=\"rock SVG\" />\r\n\t\t\t\t\t</figure>\r\n\t\t\t\t</header>\r\n\t\t\t\t<Game />\r\n\t\t\t\t<Result />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\nimport Container from './components/Container';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Container />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/css/main.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}